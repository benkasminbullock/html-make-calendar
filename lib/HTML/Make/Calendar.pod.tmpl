[% start_year=2021 %]
[% MACRO example(file) BLOCK %]
[%- pl =  file _ ".pl" -%]
[%- out = file _ "-out.txt" -%]
[% INCLUDE $pl | xtidy %]

=begin html

<p>The output HTML looks like this:</p>

[% INCLUDE $out %]

=end html

(This example is included as L<F<[% pl %]>|https://fastapi.metacpan.org/source/BKB/HTML-Make-Calendar-[% info.version %]/examples/[% pl %]> in the distribution.)
[% END %]
[% MACRO since(version) BLOCK -%]
This method was added in version [% version %] of the module.
[%- END %]
=encoding UTF-8

=head1 NAME

[% info.colon %] - Make an HTML calendar

=head1 SYNOPSIS

    use [% info.colon %];

=head1 VERSION

This documents version [% info.version %] of [% info.name %]
corresponding to L<git commit [% commit.commit %]|[% info.repo
%]/commit/[% commit.commit %]> released on [% commit.date %].

=head1 DESCRIPTION

This module constructs HTML calendars.

=head1 FUNCTIONS

=head2 calendar

    my $out = calendar (year => 2010, month => 10);

Make the calendar. The return value is an HTML::Make object. To get
the actual HTML, call its C<text> method:

[% example("calendar") %]

The possible arguments are

=over

=item cdata

Callback data, see L</dayc>.

=item dayc

Day callback. If this is omitted, a default element is added. The day
callback is called with three arguments, first L</cdata>, second the
date as a hash reference with arguments C<year>, C<month> and C<dom>
(day of month, a number from 1 to 31), and third the HTML element to
attach the return value to, representing the cell of the calendar.

    &{$dayc} ($cdata, {year => 2020, month => 12, day => 21}, $td);

where C<$td> is an L<HTML::Make> object.

=item month

The month, as a number from 1 to 12. If the month is omitted, the
current month is used as given by L<Date::Calc/Today>.

=item year

The year, as a four-digit number like C<2020>. If the year is omitted,
the current year is used, as given by L<Date::Calc/Today>.

=back

=head3 Daily menu

This example demonstrates the use of L</dayc> and L</cdata>.

[% example("menu") %]

=head3 Phases of the moon

This example demonstrates the use of L</dayc> and L</cdata> by adding
the phase of the moon to your calendar. It requires
L<Astro::MoonPhase> (not included with this distribution).

[% example("moon") %]

=head1 CSS STYLES

The elements of the calendar have the following CSS default style names:

=cut

# To do: Add information about the HTML elements and their CSS classes
# from the machine-readable table.

=pod

=cut

# To do: Document the abbreviations like "dom" or "wom".

=pod


=head1 DEPENDENCIES

=over

=item L<Date::Calc>

Date::Calc supplies the date information for the calendar.

=item L<HTML::Make>

HTML::Make is used to generate the HTML for the calendar.

=back

=head1 SCRIPT

See L<html-cal> in the distribution.

=head1 SEE ALSO

=head2 Other CPAN modules

=over

=item L<Calendar::List>

=item L<Calendar::Schedule>

=item L<Calendar::Simple>

=item L<Date::Calendar>

Includes a script L<cal2html> for making HTML.

=item L<HTML::Calendar::Monthly>

Fork of L</HTML::Calendar::Simple>. The documentation is largely
copy-pasted from that with some alterations.

=item L<HTML::Calendar::Simple>

=item L<HTML::CalendarMonth>

=item L<HTML::CalendarMonthSimple>

=item L<SVG::Calendar>

=back

[% INCLUDE "author" %]
