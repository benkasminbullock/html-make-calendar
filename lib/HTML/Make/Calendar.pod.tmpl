[% start_year=2021 %]
[% MACRO example(file) BLOCK %]
[%- pl =  file _ ".pl" -%]
[%- out = file _ "-out.txt" -%]
[% INCLUDE $pl | xtidy %]

=begin html

<p>The output HTML looks like this:</p>

[% INCLUDE $out %]

=end html

(This example is included as L<F<[% pl %]>|https://fastapi.metacpan.org/source/BKB/HTML-Make-Calendar-[% info.version %]/examples/[% pl %]> in the distribution.)
[% END %]
[% MACRO since(version) BLOCK -%]
This method was added in version [% version %] of the module.
[%- END %]
=encoding UTF-8

=head1 NAME

[% info.colon %] - Make an HTML calendar

=head1 SYNOPSIS

[% example("synopsis") %]

=head1 VERSION

This documents version [% info.version %] of [% info.name %]
corresponding to L<git commit [% commit.commit %]|[% info.repo
%]/commit/[% commit.commit %]> released on [% commit.date %].

=head1 DESCRIPTION

This module constructs HTML calendars.

=head1 FUNCTIONS

=head2 calendar

    my $out = calendar (year => 2010, month => 10);

Make the calendar. The return value is an HTML::Make object. To get
the actual HTML, call its C<text> method:

[% example("calendar") %]

The possible arguments are

=over

=item cdata

Callback data, see L</dayc>.

=item dayc

Day callback which fills in the "day" cell of the calendar. If this is
omitted, a default element is added. The day callback is called with
three arguments, first L</cdata>, your data, second the date as a hash
reference with arguments C<year>, C<month> and C<dom> (day of month, a
number from 1 to 31), and third the HTML element to attach the return
value to, representing the cell of the calendar, like this:

    &{$dayc} ($cdata, {year => 2020, month => 12, dom => 21}, $td);

where C<$td> is an L<HTML::Make> object.

=item daynames

Specify the names of the days. See L</Japanese calendar> for an
example.

=item first

The first day of the week. The default is 1 for Monday. Specify 7 to
start on Sunday:

[% example("first") %]

Any other day of the week may also be used, for example specify 3 to
start the weeks on Wednesdays.

=item month

The month, as a number from 1 to 12. If the month is omitted, the
current month is used as given by L<Date::Calc/Today>.

=item monthc

Callback for month and year name. See L</Japanese calendar> for an
example.

=item year

The year, as a four-digit number like C<2020>. If the year is omitted,
the current year is used, as given by L<Date::Calc/Today>.

=back

=head3 Phases of the moon

This example demonstrates the use of L</dayc> and L</cdata> by adding
the phase of the moon to your calendar. It requires
L<Astro::MoonPhase> (not included with this distribution).

[% example("moon") %]

=head3 Daily menu

This example demonstrates the use of L</dayc> and L</cdata>, and how
to add your own HTML into the cells of the calendar.

[% example("menu") %]

=head3 Japanese calendar

This example shows making a Japanese calendar using L</daynames> as
well as L</monthc> to put the month name into Japanese. It uses
L<Date::Qreki>, L<Calendar::Japanese::Holiday>,
L<Lingua::JA::Numbers>, and L<Lingua::JA::FindDates> to make various
bits of information typically found on Japanese calendars.

[% example("japanese") %]

=head1 DEFAULT HTML ELEMENTS AND CSS CLASSES

The elements of the calendar have the following default HTML elements
and CSS default style names:

=over

[% FOR el IN html %]
=item [% el.item %]

The default HTML element for C<[% el.item %]> ([% el.desc %]) is C<< <[%
el.element %]> >> with class C<[% el.class %]>
[%- IF el.item == "day" %] as well as class C<cal-mon>, C<cal-tue>, etc[% END %].

[% END # html %]

=back

=head1 TERMINOLOGY

=over

=item dow = day of the week (Monday, Tuesday, etc.)

=item dom = day of the month (1 to 31)

=item wom = week of the month (corresponds to the rows of the calendar)

=back

=head1 DEPENDENCIES

=over

=item L<Date::Calc>

Date::Calc supplies the date information for the calendar.

=item L<HTML::Make>

HTML::Make is used to generate the HTML for the calendar.

=item L<Table::Readable>

Table::Readable is used to read a table of HTML element and CSS class
defaults.

=back

=head1 SCRIPT

See L<html-cal> in the distribution.

=head1 SEE ALSO

=head2 Other CPAN modules

=over

=item L<Calendar::List>

=item L<Calendar::Schedule>

=item L<Calendar::Simple>

=item L<Date::Calendar>

Includes a script L<cal2html> for making HTML.

=item L<HTML::Calendar::Monthly>

Fork of L</HTML::Calendar::Simple>. The documentation is largely
copy-pasted from that with some alterations.

=item L<HTML::Calendar::Simple>

=item L<HTML::CalendarMonth>

=item L<HTML::CalendarMonthSimple>

=item L<SVG::Calendar>

=back

=head2 Other HTML calendar generators

=over

=item Python

The defaults of HTML calendar are somewhat based on Python's
L<calendar.HTMLCalendar|https://docs.python.org/3/library/calendar.html#calendar.HTMLCalendar>.

=back

[% INCLUDE "author" %]
